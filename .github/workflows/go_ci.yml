name: CI

env:
  GOPRIVATE: go.pedidopago.com.br,github.com/pedidopago/*,go.buf.build
  GOPROXY: direct
  BUF_TOKEN: ${{ secrets.BUF_TOKEN }}

on:
  workflow_call:
    inputs:
      run_tests:
        description: "Run tests"
        required: false
        type: boolean
      run_coverage:
        description: "Run test coverage check"
        required: false
        type: boolean
      run_static_analysis:
        description: "Run static analysis check"
        required: false
        type: boolean
      run_environment:
        description: "Run environment (staging/production)"
        required: false
        type: string
        default: staging
    secrets:
      DISCORD_WEBHOOK:
        required: false
        description: "Discord webhook URL"
      PPGITHUB_USER:
        required: true
        description: "GitHub username"
      PPGITHUB_TOKEN:
        required: true
        description: "GitHub token"
      PAGARME_KEY:
        required: false
        description: "Payments secrets -> environment variable"
      PAGARME_CRYPTO:
        required: false
        description: "Payments secrets -> environment variable"
      BILLET_INSTRUCTIONS:
        required: false
        description: "Payments secrets -> environment variable"
      SOFT_DESCRIPTOR:
        required: false
        description: "Payments secrets -> environment variable"
      TEST_AWS_ID:
        required: false
        description: "MS-Messages secrets -> environment variable"
      TEST_AWS_KEY:
        required: false
        description: "MS-Messages secrets -> environment variable"
      TEST_AWS_SES_REGION:
        required: false
        description: "MS-Messages secrets -> environment variable"
jobs:
  build:
    name: Build Go binary (linux x64)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Go
        uses: WillAbides/setup-go-faster@v1.5.0
        with:
          go-version: 1.16.x
      - name: Retrieve Git Tokens
        env:
          USER: ${{ secrets.PPGITHUB_USER }}
          TOKEN: ${{ secrets.PPGITHUB_TOKEN }}
          BBUSER: ${{ secrets.BUFBUILD_USER }}
          BBTOKEN: ${{ secrets.BUFBUILD_TOKEN }}
        run: |
          git config --global url."https://${USER}:${TOKEN}@github.com/pedidopago".insteadOf "git+ssh://git@github.com/pedidopago" --replace-all
          git config --global url."https://${USER}:${TOKEN}@github.com/pedidopago".insteadOf "https://github.com/pedidopago" --add
          git config --global url."https://${BBUSER}:${BBTOKEN}@go.buf.build".insteadOf "https://go.buf.build" --add
      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: rm -rf vendor
      - uses: bufbuild/buf-setup-action@v0.6.0
      - run: echo ${BUF_TOKEN} | buf registry login --username gabs --token-stdin
      - name: Build CI binary via Mage
        env:
          BUILD_ENV: ci
          GOPRIVATE: go.pedidopago.com.br,github.com/pedidopago/*,go.buf.build
          GOPROXY: direct
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: cibuild
  test:
    name: Test Go Code
    runs-on: ubuntu-latest
    needs: build
    services:
      mariadb:
        image: mariadb:10.5
        env:
          MYSQL_ROOT_PASSWORD: "123456789"
          MYSQL_DATABASE: ms_temp
        ports:
          - 33306:3306
    env:
      DHOOK: ${{ secrets.DISCORD_WEBHOOK }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Retrieve Git Tokens
        env:
          USER: ${{ secrets.PPGITHUB_USER }}
          TOKEN: ${{ secrets.PPGITHUB_TOKEN }}
        run: |
          git config --global url."https://${USER}:${TOKEN}@github.com/pedidopago".insteadOf "git+ssh://git@github.com/pedidopago" --replace-all
          git config --global url."https://${USER}:${TOKEN}@github.com/pedidopago".insteadOf "https://github.com/pedidopago" --add
      - name: Install Go
        uses: WillAbides/setup-go-faster@v1.5.0
        with:
          go-version: 1.16.x
      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - run: "GO111MODULE=on go get honnef.co/go/tools/cmd/staticcheck"
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1
      - name: Install MJML # dependency of ms-messages
        run: npm install -g mjml
      - name: Test Go Code
        if: ${{ inputs.run_tests }}
        uses: magefile/mage-action@v1
        env:
          TEST_DBCS: "root:123456789@tcp(localhost:33306)/ms_temp?parseTime=true&collation=utf8mb4_general_ci&charset=utf8mb4,utf8&multiStatements=true"
          PAGARME_KEY: ${{ secrets.PAGARME_KEY }}
          PAGARME_CRYPTO: ${{ secrets.PAGARME_CRYPTO }}
          BILLET_INSTRUCTIONS: ${{ secrets.BILLET_INSTRUCTIONS }}
          SOFT_DESCRIPTOR: ${{ secrets.SOFT_DESCRIPTOR }}
          TEST_AWS_ID: ${{ secrets.TEST_AWS_ID }}
          TEST_AWS_KEY: ${{ secrets.TEST_AWS_KEY }}
          TEST_AWS_SES_REGION: ${{ secrets.TEST_AWS_SES_REGION }}
        with:
          version: latest
          args: runalltests
      - name: Check test coverage
        if: ${{ inputs.run_coverage }}
        uses: magefile/mage-action@v1
        env:
          TEST_DBCS: "root:123456789@tcp(localhost:33306)/ms_temp?parseTime=true&collation=utf8mb4_general_ci&charset=utf8mb4,utf8&multiStatements=true"
          PAGARME_KEY: ${{ secrets.PAGARME_KEY }}
          PAGARME_CRYPTO: ${{ secrets.PAGARME_CRYPTO }}
          BILLET_INSTRUCTIONS: ${{ secrets.BILLET_INSTRUCTIONS }}
          SOFT_DESCRIPTOR: ${{ secrets.SOFT_DESCRIPTOR }}
          TEST_AWS_ID: ${{ secrets.TEST_AWS_ID }}
          TEST_AWS_KEY: ${{ secrets.TEST_AWS_KEY }}
          TEST_AWS_SES_REGION: ${{ secrets.TEST_AWS_SES_REGION }}
          # MIN_TEST_COVERAGE: 9.99 # remove comment to override test coverage
        with:
          version: latest
          args: runtestcoverage
      - name: Notify Discord (tests)
        if: ${{ env.DHOOK != '' }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "‚úÖ [${{ inputs.run_environment }}] **{{ EVENT_PAYLOAD.repository.full_name }}** unit tests\nüë®‚Äçüî¨üë©‚Äçüî¨"
        continue-on-error: true
      - name: Run static analysis
        if: ${{ inputs.run_static_analysis }}
        run: |
          go vet ./...
          $(go env GOPATH)/bin/staticcheck -go 1.16 ./...
      - name: Notify Discord (static analysis)
        if: ${{ env.DHOOK != '' }}
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        uses: Ilshidur/action-discord@master
        with:
          args: "‚úÖ [${{ inputs.run_environment }}] **{{ EVENT_PAYLOAD.repository.full_name }}** static analysis\nüïµÔ∏è‚Äç‚ôÇÔ∏èüïµÔ∏è‚Äç‚ôÄÔ∏è"
        continue-on-error: true
